/*
 * Copyright 2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.gradle.buildinit.projectspecs;

import org.gradle.api.Incubating;

import java.util.List;

/**
 * A supplier of additional types of projects that can be generated by the {@code init} task.
 * <p>
 * Instances will be dynamically discovered by a {@link java.util.ServiceLoader ServiceLoader}.  If these exist
 * then the {@code init} task will display the results of {@link #getProjectSpecs()} as additional options
 * for generating projects.
 *
 * @implSpec Implementations should be {@code public}, and provide an (implicit or explicit) 0-argument constructor.
 * @since 8.11
 */
@Incubating
public interface InitProjectSource {
    /**
     * Returns specifications of the project types this source can generate.
     *
     * @return the project specifications
     * @since 8.11
     */
    List<InitProjectSpec> getProjectSpecs();

    /**
     * Returns the type of generator used to create the project specs provided by this source.
     * <p>
     * This type will be instantiated by the build system, injecting services and other types as needed,
     * and will be used to generate the projects.
     *
     * @return project generator for this source's specs
     * @since 8.11
     */
    Class<? extends InitProjectGenerator> getProjectGenerator();
}
